# -*- coding: utf-8 -*-
"""Churn_Modelling using ANN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14bRxXgo_eayvFsEj2h49czUTyahhT58w
"""

import numpy as np
import pandas as pd
import tensorflow as tf
from sklearn.preprocessing import OneHotEncoder, LabelEncoder

dataset = pd.read_csv("https://raw.githubusercontent.com/SSSirsat/data/main/Churn_Modelling.csv")
y = dataset.iloc[:,-1].values
X = dataset.iloc[:, 3:-1].values

print(X)
print(y)
le = LabelEncoder()
dataset['Gender'] = le.fit_transform(dataset['Gender'])

from sklearn.compose import ColumnTransformer, make_column_transformer
from sklearn.preprocessing import OneHotEncoder, LabelEncoder
#ctobj = ColumnTransformer(transformers = [('encoder', OneHotEncoder(),[1])], remainder = 'passthrough')
ctobj = make_column_transformer((OneHotEncoder(categories='auto'),[1,2]), remainder = 'passthrough')
X = np.array(ctobj.fit_transform(X))
print(X)
print(dataset['Gender'].unique())
from sklearn.preprocessing import StandardScaler
scobj = StandardScaler()
X = scobj.fit_transform(X)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

#Build the Model

ann = tf.keras.models.Sequential()
#First input layer and the hidden layer
ann.add(tf.keras.layers.Dense(units=6, activation='relu'))
ann.add(tf.keras.layers.Dense(units=10, activation='relu'))
ann.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))
ann.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

ann.fit(X_train, y_train, batch_size=32, epochs=100)

y_pred = ann.predict(X_test)
y_pred = (y_pred > 0.5)
print(y_pred)

from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test, y_pred)
print(cm)

as1 = accuracy_score(y_test, y_pred)
print(as1)


